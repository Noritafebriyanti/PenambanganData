{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"tugas 2 penambangan data/","text":"Pengertian Data Mining Data Mining adalah proses memilah-milah sejumlah data yang berkaitan (data set) untuk mengidentifikasi pola dan membangun hubungan untuk memecahkan masalah melalui analisa data. Alat data mining memungkinkan individu atau perusahaan untuk memprediksi tren masa depan. Jika diartikan atau diterjemahkan secara harfiah, data mining adalah pengemangan data. Kalimat lain untuk menjelaskannya, data mining adalah proses menemukan anomali, pola dan korelasi diantara berbagai data set yang besar untuk memprediksi hasil. Dengan menggunakan berbagai teknik, kita dapat menggunakan informasi yang digali untuk meningkatkan pendapatan, efisiensi, meningkatkan pelayanan pelanggan, mengurangi risiko, dan masih banyak lagi. Manfaat Data Mining Jika dijelaskan secara umum, manfaat data mining adalah untuk mengungkap pola yang tersembunyi dan hubungan dalam data yang dapat digunakan untuk membuat prediksi yang bermanfaat untuk bisnis. Manfaat data mining secara spesifik sangat beragam tergantung tujuan dan industri yang dijalankan. Bagian penjualan dan pemasaran dapat menggali data pelanggan untuk meningkatkan tingkat konversi prospek atau untuk membuat materi pemasaran one-to-one. Informasi data mining mengenai pola sejarah penjualan dan perilaku pelanggan dapat digunakan untuk membangun model prediksi yang bermanfaat untuk penjualan di masa mendatang, membuat produk atau layanan baru. Perusahaan dalam industri keuangan menggunakan alat data mining untuk membangun model risiko dan mendeteksi penipuan. Industri manufaktur menggunakan alat data mining untuk meningkatkan keamanan produk, mengidentifikasi masalah kualitas, mengelola rantai pasokan barang dan meningkatkan operasional. Contoh Data Mining Berikut adalah contoh data mining yang sederhana. Bisa dijadikan sebagai inspirasi untuk meningkatkan dan menyempurnakan strategi pemasaran dan unggul dalam persaingan bisnis. menhitung jarak from IPython.display import Image, display ; display(Image(filename=\"chord.PNG\")) menghitung jarak biner from IPython.display import Image, display ; display(Image(filename=\"menghitung jarak biner.PNG\")) menghitung catagorical from IPython.display import Image, display ; display(Image(filename=\"categorical.PNG\")) menghitung jarak ordinal from IPython.display import Image, display ; display(Image(filename=\"ordinal.PNG\")) menghitung jarak campuran from IPython.display import Image, display ; display(Image(filename=\"campuran.PNG\")) Mengukur Jarak Data Tugas II Mengukur Jarak Data from scipy import stats import numpy as np import seaborn as sns import matplotlib.pyplot as plt import pandas as pd df = pd.read_csv('databaru.csv') k=df.iloc[10:16] k .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } umur istri pendidikan istri pendidikan suami jumlah anak agama istri perkerjaan istri kependudukan suami taraf kehidupan paparan media 10 38 1 3 2 1 0 3 3 1 11 42 1 4 4 1 1 1 3 0 12 44 4 4 1 1 0 1 4 0 13 42 2 4 1 1 0 3 3 0 14 38 3 4 2 1 1 2 3 0 15 26 2 4 0 1 1 4 1 0 numerical=[0,3] categorical=[1,2,6,7] binary=[4,5,8] ordinal=[1,2] from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[0]+[0]+[0]+[0], [\"v1-v3\"]+[0]+[0]+[0]+[0]+[0], [\"v2-v3\"]+[0]+[0]+[0]+[0]+[0], [\"v3-v4\"]+[0]+[0]+[0]+[0]+[0], [\"v4-v5\"]+[0]+[0]+[0]+[0]+[0], [\"v5-v6\"]+[0]+[0]+[0]+[0]+[0] ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 0 0 0 0 v1-v3 0 0 0 0 0 v2-v3 0 0 0 0 0 v3-v4 0 0 0 0 0 v4-v5 0 0 0 0 0 v5-v6 0 0 0 0 0 Jarak numeric def chordDist(v1,v2,jnis): jmlh=0 normv1=0 normv2=0 for x in range (len(jnis)): normv1=normv1+(int(k.values.tolist()[v1][jnis[x]])**2) normv2=normv2+(int(k.values.tolist()[v1][jnis[x]])**2) jmlh=jmlh+(int(k.values.tolist()[v1][jnis[x]])*int(k.values.tolist()[v2][jnis[x]])) return ((2-(2*jmlh/(normv1*normv2)))**0.5) from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[\"{:.2f}\".format(chordDist(0,1,numerical))]+[0]+[0]+[0], [\"v1-v3\"]+[0]+[\"{:.2f}\".format(chordDist(0,2,numerical))]+[0]+[0]+[0], [\"v2-v3\"]+[0]+[\"{:.2f}\".format(chordDist(1,2,numerical))]+[0]+[0]+[0], [\"v3-v4\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[0]+[0]+[0], [\"v4-v5\"]+[0]+[\"{:.2f}\".format(chordDist(3,4,numerical))]+[0]+[0]+[0], [\"v5-v6\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[0]+[0]+[0], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 1.41 0 0 0 v1-v3 0 1.41 0 0 0 v2-v3 0 1.41 0 0 0 v3-v4 0 1.41 0 0 0 v4-v5 0 1.41 0 0 0 v5-v6 0 1.41 0 0 0 Jarak Ordinal def ordDist(v1,v2,jns): jmlh=0 for x in range (len(jns)): z1=int(k.values.tolist()[v1][jns[x]])-1 z2=int(k.values.tolist()[v2][jns[x]])-1 jmlh=jmlh+chordDist(z1,z2,jns) return (jmlh) from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[\"{:.2f}\".format(chordDist(0,1,numerical))]+[\"{:.2f}\".format(ordDist(0,1,ordinal))]+[categoricalDist(0,1,categorical)]+[binaryDist(0,1,binary)], [\"v1-v3\"]+[0]+[\"{:.2f}\".format(chordDist(0,2,numerical))]+[\"{:.2f}\".format(ordDist(0,2,ordinal))]+[categoricalDist(0,2,categorical)]+[binaryDist(0,1,binary)], [\"v2-v3\"]+[0]+[\"{:.2f}\".format(chordDist(1,2,numerical))]+[\"{:.2f}\".format(ordDist(1,2,ordinal))]+[categoricalDist(1,2,categorical)]+[binaryDist(0,1,binary)], [\"v3-v4\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[\"{:.2f}\".format(ordDist(2,3,ordinal))]+[categoricalDist(2,3,categorical)]+[binaryDist(0,1,binary)], [\"v4-v5\"]+[0]+[\"{:.2f}\".format(chordDist(3,4,numerical))]+[\"{:.2f}\".format(ordDist(3,4,ordinal))]+[categoricalDist(3,4,categorical)]+[binaryDist(0,1,binary)], [\"v5-v6\"]+[0]+[\"{:.2f}\".format(chordDist(4,5,numerical))]+[\"{:.2f}\".format(ordDist(4,5,ordinal))]+[categoricalDist(4,5,categorical)]+[binaryDist(0,1,binary)], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 1.41 2.74 2 0.0 v1-v3 0 1.41 2.71 4 0.0 v2-v3 0 1.41 2.69 2 0.0 v3-v4 0 1.41 2.76 3 0.0 v4-v5 0 1.41 2.74 2 0.0 v5-v6 0 1.41 2.78 3 0.0 Jarak categorical def categoricalDist(v1,v2,jnis): jmlh=0 for x in range (len(jnis)): if (k.values.tolist()[v1][jnis[x]])!=(k.values.tolist()[v2][jnis[x]]): jmlh=jmlh+1 return (jmlh) from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[\"{:.2f}\".format(chordDist(0,1,numerical))]+[\"{:.2f}\".format(ordDist(0,1,ordinal))]+[categoricalDist(0,1,categorical)]+[binaryDist(0,1,binary)], [\"v1-v3\"]+[0]+[\"{:.2f}\".format(chordDist(0,2,numerical))]+[\"{:.2f}\".format(ordDist(0,2,ordinal))]+[categoricalDist(0,2,categorical)]+[binaryDist(0,1,binary)], [\"v2-v3\"]+[0]+[\"{:.2f}\".format(chordDist(1,2,numerical))]+[\"{:.2f}\".format(ordDist(1,2,ordinal))]+[categoricalDist(1,2,categorical)]+[binaryDist(0,1,binary)], [\"v3-v4\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[\"{:.2f}\".format(ordDist(2,3,ordinal))]+[categoricalDist(2,3,categorical)]+[binaryDist(0,1,binary)], [\"v4-v5\"]+[0]+[\"{:.2f}\".format(chordDist(3,4,numerical))]+[\"{:.2f}\".format(ordDist(3,4,ordinal))]+[categoricalDist(3,4,categorical)]+[binaryDist(0,1,binary)], [\"v5-v6\"]+[0]+[\"{:.2f}\".format(chordDist(4,5,numerical))]+[\"{:.2f}\".format(ordDist(4,5,ordinal))]+[categoricalDist(4,5,categorical)]+[binaryDist(0,1,binary)], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 1.41 2.74 2 0.0 v1-v3 0 1.41 2.71 4 0.0 v2-v3 0 1.41 2.69 2 0.0 v3-v4 0 1.41 2.76 3 0.0 v4-v5 0 1.41 2.74 2 0.0 v5-v6 0 1.41 2.78 3 0.0 Jarak binary def binaryDist(v1,v2,jnis): q=0 r=0 s=0 t=0 for x in range (len(jnis)): if (int(k.values.tolist()[v1][jnis[x]]))==1 and (int(k.values.tolist()[v2][jnis[x]]))==1: q=q+1 elif (int(k.values.tolist()[v1][jnis[x]]))==1 and (int(k.values.tolist()[v2][jnis[x]]))==2: r=r+1 elif (int(k.values.tolist()[v1][jnis[x]]))==2 and (int(k.values.tolist()[v2][jnis[x]]))==1: s=s+1 else: t=t+1 return ((r+s)/(q+r+s+t)) from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[\"{:.2f}\".format(chordDist(0,1,numerical))]+[\"{:.2f}\".format(ordDist(0,1,ordinal))]+[categoricalDist(0,1,categorical)]+[binaryDist(0,1,binary)], [\"v1-v3\"]+[0]+[\"{:.2f}\".format(chordDist(0,2,numerical))]+[\"{:.2f}\".format(ordDist(0,2,ordinal))]+[categoricalDist(0,2,categorical)]+[binaryDist(0,1,binary)], [\"v2-v3\"]+[0]+[\"{:.2f}\".format(chordDist(1,2,numerical))]+[\"{:.2f}\".format(ordDist(1,2,ordinal))]+[categoricalDist(1,2,categorical)]+[binaryDist(0,1,binary)], [\"v3-v4\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[\"{:.2f}\".format(ordDist(2,3,ordinal))]+[categoricalDist(2,3,categorical)]+[binaryDist(0,1,binary)], [\"v4-v5\"]+[0]+[\"{:.2f}\".format(chordDist(3,4,numerical))]+[\"{:.2f}\".format(ordDist(3,4,ordinal))]+[categoricalDist(3,4,categorical)]+[binaryDist(0,1,binary)], [\"v5-v6\"]+[0]+[\"{:.2f}\".format(chordDist(4,5,numerical))]+[\"{:.2f}\".format(ordDist(4,5,ordinal))]+[categoricalDist(4,5,categorical)]+[binaryDist(0,1,binary)], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 1.41 2.74 2 0.0 v1-v3 0 1.41 2.71 4 0.0 v2-v3 0 1.41 2.69 2 0.0 v3-v4 0 1.41 2.76 3 0.0 v4-v5 0 1.41 2.74 2 0.0 v5-v6 0 1.41 2.78 3 0.0 Jarak campuran def jarak(v1,v2): return ((chordDist(v1,v2,numerical)+ordDist(v1,v2,ordinal)+categoricalDist(v1,v2,categorical)+binaryDist(v1,v2,binary))/4) from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[\"{:.2f}\".format(chordDist(0,1,numerical))]+[\"{:.2f}\".format(ordDist(0,1,ordinal))]+[categoricalDist(0,1,categorical)]+[binaryDist(0,1,binary)], [\"v1-v3\"]+[0]+[\"{:.2f}\".format(chordDist(0,2,numerical))]+[\"{:.2f}\".format(ordDist(0,2,ordinal))]+[categoricalDist(0,2,categorical)]+[binaryDist(0,1,binary)], [\"v2-v3\"]+[0]+[\"{:.2f}\".format(chordDist(1,2,numerical))]+[\"{:.2f}\".format(ordDist(1,2,ordinal))]+[categoricalDist(1,2,categorical)]+[binaryDist(0,1,binary)], [\"v3-v4\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[\"{:.2f}\".format(ordDist(2,3,ordinal))]+[categoricalDist(2,3,categorical)]+[binaryDist(0,1,binary)], [\"v4-v5\"]+[0]+[\"{:.2f}\".format(chordDist(3,4,numerical))]+[\"{:.2f}\".format(ordDist(3,4,ordinal))]+[categoricalDist(3,4,categorical)]+[binaryDist(0,1,binary)], [\"v5-v6\"]+[0]+[\"{:.2f}\".format(chordDist(4,5,numerical))]+[\"{:.2f}\".format(ordDist(4,5,ordinal))]+[categoricalDist(4,5,categorical)]+[binaryDist(0,1,binary)], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 1.41 2.74 2 0.0 v1-v3 0 1.41 2.71 4 0.0 v2-v3 0 1.41 2.69 2 0.0 v3-v4 0 1.41 2.76 3 0.0 v4-v5 0 1.41 2.74 2 0.0 v5-v6 0 1.41 2.78 3 0.0","title":"Tugas 2 penambangan data"},{"location":"tugas 2 penambangan data/#pengertian-data-mining","text":"Data Mining adalah proses memilah-milah sejumlah data yang berkaitan (data set) untuk mengidentifikasi pola dan membangun hubungan untuk memecahkan masalah melalui analisa data. Alat data mining memungkinkan individu atau perusahaan untuk memprediksi tren masa depan. Jika diartikan atau diterjemahkan secara harfiah, data mining adalah pengemangan data. Kalimat lain untuk menjelaskannya, data mining adalah proses menemukan anomali, pola dan korelasi diantara berbagai data set yang besar untuk memprediksi hasil. Dengan menggunakan berbagai teknik, kita dapat menggunakan informasi yang digali untuk meningkatkan pendapatan, efisiensi, meningkatkan pelayanan pelanggan, mengurangi risiko, dan masih banyak lagi.","title":"Pengertian Data Mining"},{"location":"tugas 2 penambangan data/#manfaat-data-mining","text":"Jika dijelaskan secara umum, manfaat data mining adalah untuk mengungkap pola yang tersembunyi dan hubungan dalam data yang dapat digunakan untuk membuat prediksi yang bermanfaat untuk bisnis. Manfaat data mining secara spesifik sangat beragam tergantung tujuan dan industri yang dijalankan. Bagian penjualan dan pemasaran dapat menggali data pelanggan untuk meningkatkan tingkat konversi prospek atau untuk membuat materi pemasaran one-to-one. Informasi data mining mengenai pola sejarah penjualan dan perilaku pelanggan dapat digunakan untuk membangun model prediksi yang bermanfaat untuk penjualan di masa mendatang, membuat produk atau layanan baru. Perusahaan dalam industri keuangan menggunakan alat data mining untuk membangun model risiko dan mendeteksi penipuan. Industri manufaktur menggunakan alat data mining untuk meningkatkan keamanan produk, mengidentifikasi masalah kualitas, mengelola rantai pasokan barang dan meningkatkan operasional.","title":"Manfaat Data Mining"},{"location":"tugas 2 penambangan data/#contoh-data-mining","text":"Berikut adalah contoh data mining yang sederhana. Bisa dijadikan sebagai inspirasi untuk meningkatkan dan menyempurnakan strategi pemasaran dan unggul dalam persaingan bisnis.","title":"Contoh Data Mining"},{"location":"tugas 2 penambangan data/#menhitung-jarak","text":"from IPython.display import Image, display ; display(Image(filename=\"chord.PNG\"))","title":"menhitung jarak"},{"location":"tugas 2 penambangan data/#menghitung-jarak-biner","text":"from IPython.display import Image, display ; display(Image(filename=\"menghitung jarak biner.PNG\"))","title":"menghitung jarak biner"},{"location":"tugas 2 penambangan data/#menghitung-catagorical","text":"from IPython.display import Image, display ; display(Image(filename=\"categorical.PNG\"))","title":"menghitung catagorical"},{"location":"tugas 2 penambangan data/#menghitung-jarak-ordinal","text":"from IPython.display import Image, display ; display(Image(filename=\"ordinal.PNG\"))","title":"menghitung jarak ordinal"},{"location":"tugas 2 penambangan data/#menghitung-jarak-campuran","text":"from IPython.display import Image, display ; display(Image(filename=\"campuran.PNG\"))","title":"menghitung jarak campuran"},{"location":"tugas 2 penambangan data/#mengukur-jarak-data","text":"","title":"Mengukur Jarak Data"},{"location":"tugas 2 penambangan data/#tugas-ii-mengukur-jarak-data","text":"from scipy import stats import numpy as np import seaborn as sns import matplotlib.pyplot as plt import pandas as pd df = pd.read_csv('databaru.csv') k=df.iloc[10:16] k .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } umur istri pendidikan istri pendidikan suami jumlah anak agama istri perkerjaan istri kependudukan suami taraf kehidupan paparan media 10 38 1 3 2 1 0 3 3 1 11 42 1 4 4 1 1 1 3 0 12 44 4 4 1 1 0 1 4 0 13 42 2 4 1 1 0 3 3 0 14 38 3 4 2 1 1 2 3 0 15 26 2 4 0 1 1 4 1 0 numerical=[0,3] categorical=[1,2,6,7] binary=[4,5,8] ordinal=[1,2] from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[0]+[0]+[0]+[0], [\"v1-v3\"]+[0]+[0]+[0]+[0]+[0], [\"v2-v3\"]+[0]+[0]+[0]+[0]+[0], [\"v3-v4\"]+[0]+[0]+[0]+[0]+[0], [\"v4-v5\"]+[0]+[0]+[0]+[0]+[0], [\"v5-v6\"]+[0]+[0]+[0]+[0]+[0] ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 0 0 0 0 v1-v3 0 0 0 0 0 v2-v3 0 0 0 0 0 v3-v4 0 0 0 0 0 v4-v5 0 0 0 0 0 v5-v6 0 0 0 0 0","title":"Tugas II Mengukur Jarak Data"},{"location":"tugas 2 penambangan data/#jarak-numeric","text":"def chordDist(v1,v2,jnis): jmlh=0 normv1=0 normv2=0 for x in range (len(jnis)): normv1=normv1+(int(k.values.tolist()[v1][jnis[x]])**2) normv2=normv2+(int(k.values.tolist()[v1][jnis[x]])**2) jmlh=jmlh+(int(k.values.tolist()[v1][jnis[x]])*int(k.values.tolist()[v2][jnis[x]])) return ((2-(2*jmlh/(normv1*normv2)))**0.5) from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[\"{:.2f}\".format(chordDist(0,1,numerical))]+[0]+[0]+[0], [\"v1-v3\"]+[0]+[\"{:.2f}\".format(chordDist(0,2,numerical))]+[0]+[0]+[0], [\"v2-v3\"]+[0]+[\"{:.2f}\".format(chordDist(1,2,numerical))]+[0]+[0]+[0], [\"v3-v4\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[0]+[0]+[0], [\"v4-v5\"]+[0]+[\"{:.2f}\".format(chordDist(3,4,numerical))]+[0]+[0]+[0], [\"v5-v6\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[0]+[0]+[0], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 1.41 0 0 0 v1-v3 0 1.41 0 0 0 v2-v3 0 1.41 0 0 0 v3-v4 0 1.41 0 0 0 v4-v5 0 1.41 0 0 0 v5-v6 0 1.41 0 0 0","title":"Jarak numeric"},{"location":"tugas 2 penambangan data/#jarak-ordinal","text":"def ordDist(v1,v2,jns): jmlh=0 for x in range (len(jns)): z1=int(k.values.tolist()[v1][jns[x]])-1 z2=int(k.values.tolist()[v2][jns[x]])-1 jmlh=jmlh+chordDist(z1,z2,jns) return (jmlh) from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[\"{:.2f}\".format(chordDist(0,1,numerical))]+[\"{:.2f}\".format(ordDist(0,1,ordinal))]+[categoricalDist(0,1,categorical)]+[binaryDist(0,1,binary)], [\"v1-v3\"]+[0]+[\"{:.2f}\".format(chordDist(0,2,numerical))]+[\"{:.2f}\".format(ordDist(0,2,ordinal))]+[categoricalDist(0,2,categorical)]+[binaryDist(0,1,binary)], [\"v2-v3\"]+[0]+[\"{:.2f}\".format(chordDist(1,2,numerical))]+[\"{:.2f}\".format(ordDist(1,2,ordinal))]+[categoricalDist(1,2,categorical)]+[binaryDist(0,1,binary)], [\"v3-v4\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[\"{:.2f}\".format(ordDist(2,3,ordinal))]+[categoricalDist(2,3,categorical)]+[binaryDist(0,1,binary)], [\"v4-v5\"]+[0]+[\"{:.2f}\".format(chordDist(3,4,numerical))]+[\"{:.2f}\".format(ordDist(3,4,ordinal))]+[categoricalDist(3,4,categorical)]+[binaryDist(0,1,binary)], [\"v5-v6\"]+[0]+[\"{:.2f}\".format(chordDist(4,5,numerical))]+[\"{:.2f}\".format(ordDist(4,5,ordinal))]+[categoricalDist(4,5,categorical)]+[binaryDist(0,1,binary)], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 1.41 2.74 2 0.0 v1-v3 0 1.41 2.71 4 0.0 v2-v3 0 1.41 2.69 2 0.0 v3-v4 0 1.41 2.76 3 0.0 v4-v5 0 1.41 2.74 2 0.0 v5-v6 0 1.41 2.78 3 0.0","title":"Jarak Ordinal"},{"location":"tugas 2 penambangan data/#jarak-categorical","text":"def categoricalDist(v1,v2,jnis): jmlh=0 for x in range (len(jnis)): if (k.values.tolist()[v1][jnis[x]])!=(k.values.tolist()[v2][jnis[x]]): jmlh=jmlh+1 return (jmlh) from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[\"{:.2f}\".format(chordDist(0,1,numerical))]+[\"{:.2f}\".format(ordDist(0,1,ordinal))]+[categoricalDist(0,1,categorical)]+[binaryDist(0,1,binary)], [\"v1-v3\"]+[0]+[\"{:.2f}\".format(chordDist(0,2,numerical))]+[\"{:.2f}\".format(ordDist(0,2,ordinal))]+[categoricalDist(0,2,categorical)]+[binaryDist(0,1,binary)], [\"v2-v3\"]+[0]+[\"{:.2f}\".format(chordDist(1,2,numerical))]+[\"{:.2f}\".format(ordDist(1,2,ordinal))]+[categoricalDist(1,2,categorical)]+[binaryDist(0,1,binary)], [\"v3-v4\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[\"{:.2f}\".format(ordDist(2,3,ordinal))]+[categoricalDist(2,3,categorical)]+[binaryDist(0,1,binary)], [\"v4-v5\"]+[0]+[\"{:.2f}\".format(chordDist(3,4,numerical))]+[\"{:.2f}\".format(ordDist(3,4,ordinal))]+[categoricalDist(3,4,categorical)]+[binaryDist(0,1,binary)], [\"v5-v6\"]+[0]+[\"{:.2f}\".format(chordDist(4,5,numerical))]+[\"{:.2f}\".format(ordDist(4,5,ordinal))]+[categoricalDist(4,5,categorical)]+[binaryDist(0,1,binary)], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 1.41 2.74 2 0.0 v1-v3 0 1.41 2.71 4 0.0 v2-v3 0 1.41 2.69 2 0.0 v3-v4 0 1.41 2.76 3 0.0 v4-v5 0 1.41 2.74 2 0.0 v5-v6 0 1.41 2.78 3 0.0","title":"Jarak categorical"},{"location":"tugas 2 penambangan data/#jarak-binary","text":"def binaryDist(v1,v2,jnis): q=0 r=0 s=0 t=0 for x in range (len(jnis)): if (int(k.values.tolist()[v1][jnis[x]]))==1 and (int(k.values.tolist()[v2][jnis[x]]))==1: q=q+1 elif (int(k.values.tolist()[v1][jnis[x]]))==1 and (int(k.values.tolist()[v2][jnis[x]]))==2: r=r+1 elif (int(k.values.tolist()[v1][jnis[x]]))==2 and (int(k.values.tolist()[v2][jnis[x]]))==1: s=s+1 else: t=t+1 return ((r+s)/(q+r+s+t)) from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[\"{:.2f}\".format(chordDist(0,1,numerical))]+[\"{:.2f}\".format(ordDist(0,1,ordinal))]+[categoricalDist(0,1,categorical)]+[binaryDist(0,1,binary)], [\"v1-v3\"]+[0]+[\"{:.2f}\".format(chordDist(0,2,numerical))]+[\"{:.2f}\".format(ordDist(0,2,ordinal))]+[categoricalDist(0,2,categorical)]+[binaryDist(0,1,binary)], [\"v2-v3\"]+[0]+[\"{:.2f}\".format(chordDist(1,2,numerical))]+[\"{:.2f}\".format(ordDist(1,2,ordinal))]+[categoricalDist(1,2,categorical)]+[binaryDist(0,1,binary)], [\"v3-v4\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[\"{:.2f}\".format(ordDist(2,3,ordinal))]+[categoricalDist(2,3,categorical)]+[binaryDist(0,1,binary)], [\"v4-v5\"]+[0]+[\"{:.2f}\".format(chordDist(3,4,numerical))]+[\"{:.2f}\".format(ordDist(3,4,ordinal))]+[categoricalDist(3,4,categorical)]+[binaryDist(0,1,binary)], [\"v5-v6\"]+[0]+[\"{:.2f}\".format(chordDist(4,5,numerical))]+[\"{:.2f}\".format(ordDist(4,5,ordinal))]+[categoricalDist(4,5,categorical)]+[binaryDist(0,1,binary)], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 1.41 2.74 2 0.0 v1-v3 0 1.41 2.71 4 0.0 v2-v3 0 1.41 2.69 2 0.0 v3-v4 0 1.41 2.76 3 0.0 v4-v5 0 1.41 2.74 2 0.0 v5-v6 0 1.41 2.78 3 0.0","title":"Jarak binary"},{"location":"tugas 2 penambangan data/#jarak-campuran","text":"def jarak(v1,v2): return ((chordDist(v1,v2,numerical)+ordDist(v1,v2,ordinal)+categoricalDist(v1,v2,categorical)+binaryDist(v1,v2,binary))/4) from IPython.display import HTML, display import tabulate table=[ [\"Data\"]+[\"Jarak\"]+[\"Numeric\"]+[\"Ordinal\"]+[\"Categorical\"]+[\"Binary\"], [\"v1-v2\"]+[0]+[\"{:.2f}\".format(chordDist(0,1,numerical))]+[\"{:.2f}\".format(ordDist(0,1,ordinal))]+[categoricalDist(0,1,categorical)]+[binaryDist(0,1,binary)], [\"v1-v3\"]+[0]+[\"{:.2f}\".format(chordDist(0,2,numerical))]+[\"{:.2f}\".format(ordDist(0,2,ordinal))]+[categoricalDist(0,2,categorical)]+[binaryDist(0,1,binary)], [\"v2-v3\"]+[0]+[\"{:.2f}\".format(chordDist(1,2,numerical))]+[\"{:.2f}\".format(ordDist(1,2,ordinal))]+[categoricalDist(1,2,categorical)]+[binaryDist(0,1,binary)], [\"v3-v4\"]+[0]+[\"{:.2f}\".format(chordDist(2,3,numerical))]+[\"{:.2f}\".format(ordDist(2,3,ordinal))]+[categoricalDist(2,3,categorical)]+[binaryDist(0,1,binary)], [\"v4-v5\"]+[0]+[\"{:.2f}\".format(chordDist(3,4,numerical))]+[\"{:.2f}\".format(ordDist(3,4,ordinal))]+[categoricalDist(3,4,categorical)]+[binaryDist(0,1,binary)], [\"v5-v6\"]+[0]+[\"{:.2f}\".format(chordDist(4,5,numerical))]+[\"{:.2f}\".format(ordDist(4,5,ordinal))]+[categoricalDist(4,5,categorical)]+[binaryDist(0,1,binary)], ] display(HTML(tabulate.tabulate(table, tablefmt='html'))) Data Jarak Numeric Ordinal Categorical Binary v1-v2 0 1.41 2.74 2 0.0 v1-v3 0 1.41 2.71 4 0.0 v2-v3 0 1.41 2.69 2 0.0 v3-v4 0 1.41 2.76 3 0.0 v4-v5 0 1.41 2.74 2 0.0 v5-v6 0 1.41 2.78 3 0.0","title":"Jarak campuran"}]}